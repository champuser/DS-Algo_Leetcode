class Solution {
     int resultStart;
        int resultLength;
    public String longestPalindrome(String s) {
       
        int strLength = s.length();
        if(strLength<2){
            return s;
            
        }
        for(int start=0;start<strLength-1;start++){
            expandRange(s,start,start);                 // check for the mid i.e if odd we found a mid
            expandRange(s,start,start + 1);              // in case of str.length is even then we will take two character as mid
            
        }
        return s.substring(resultStart,resultStart + resultLength);
        
    }
    public void expandRange(String str,int begin,int end){
        while(begin>=0 && end<str.length() && str.charAt(begin) ==  str.charAt(end)){
            begin --;
            end ++;
        }
        if(resultLength<end -begin -1){
            resultStart = begin + 1;
            resultLength = end - begin - 1;
        }
    }
}

// Given a sorted array nums, remove the duplicates in-place such that each element appears only once and returns the new length.

// Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.

// Clarification:

// Confused why the returned value is an integer but your answer is an array?

// Note that the input array is passed in by reference, which means a modification to the input array will be known to the caller as well.
// Input: nums = [1,1,2]
// Output: 2, nums = [1,2]
// Explanation: Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn't matter what you leave beyond the returned length.






class Solution {
    public int removeDuplicates(int[] nums) {
        if(nums.length==0 || nums.length==1){
            return nums.length;
        }
        int indexForUniqueElements=0;
        for(int index=0;index<nums.length-1;index++){
            if(nums[index]!= nums[index +1])
                nums[indexForUniqueElements++] = nums[index];
        }
        
           nums[indexForUniqueElements++] = nums[nums.length-1];
        return indexForUniqueElements;
    }
    
}








